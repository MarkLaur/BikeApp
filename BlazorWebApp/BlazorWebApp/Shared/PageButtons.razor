<!-- 
    This component contains page buttons that add a page parameter to the url when clicked.
    The component contains CurrentPage and LastPage parameters that must be set.
-->
@inject NavigationManager navMan

<div class="mb-2 page-div">
    @if (PreviousPage != null)
    {
        <NavLink href="@PreviousPage">
            <button class="btn btn-primary btn-sm page-button">Previous page</button>
        </NavLink>
    }
    else
    {
        <NavLink>
            <button class="btn btn-primary btn-sm page-button" disabled>Previous page</button>
        </NavLink>
    }

    <h4>Page @CurrentPage / @LastPage</h4>

    @if (NextPage != null)
    {
        <NavLink href="@NextPage">
            <button class="btn btn-primary btn-sm page-button">Next page</button>
        </NavLink>
    }
    else
    {
        <NavLink>
            <button class="btn btn-primary btn-sm page-button" disabled>Next page</button>
        </NavLink>
    }
</div>

@code {
    [Parameter, EditorRequired]
    public int CurrentPage { get; set; } = 1;

    [Parameter, EditorRequired]
    public int LastPage { get; set; }

    public string? NextPage
    {
        get
        {
            if (CurrentPage >= LastPage) return null;
            else return navMan.GetUriWithQueryParameter("page", CurrentPage + 1);
        }
    }

    public string? PreviousPage
    {
        get
        {
            if (CurrentPage <= 1) return null;
            else return navMan.GetUriWithQueryParameter("page", CurrentPage - 1);
        }
    }
}
